// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "./ArbiTradeToken.sol";

contract RevenueSharing {
    address public owner;
    ArbiTradeToken public arbiTradeToken;
    uint256 public totalRevenue;
    mapping(address => uint256) public userRevenue;

    event RevenueShare(address indexed user, uint256 amount);

    constructor(address tokenAddress) {
        owner = msg.sender;
        arbiTradeToken = ArbiTradeToken(tokenAddress);
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "RevenueSharing: Only owner can call this function");
        _;
    }

    function distributeRevenue(uint256 amount) external onlyOwner {
        require(amount > 0, "RevenueSharing: Invalid revenue amount");
        require(arbiTradeToken.balanceOf(address(this)) >= amount, "RevenueSharing: Insufficient balance");

        totalRevenue += amount;

        uint256 numUsers = arbiTradeToken.totalSupply();
        uint256 revenuePerUser = amount / numUsers;

        for (uint256 i = 0; i < numUsers; i++) {
            address user = arbiTradeToken.tokenHolderAtIndex(i);
            userRevenue[user] += revenuePerUser;
            emit RevenueShare(user, revenuePerUser);
        }
    }

    function claimRevenue() external {
        require(userRevenue[msg.sender] > 0, "RevenueSharing: No revenue to claim");

        uint256 amount = userRevenue[msg.sender];
        userRevenue[msg.sender] = 0;

        arbiTradeToken.transfer(msg.sender, amount);
    }
}


//This revenue sharing contract includes the following functionality:

//totalRevenue variable to store the total revenue generated by the platform
//userRevenue mapping to store the revenue earned by each user
//RevenueShare event to log the distribution of revenue to users
//owner variable to store the owner of the contract
//arbiTradeToken variable to store the address of the ARB token contract
//distributeRevenue function to distribute revenue to all users holding the ARB token
//claimRevenue function to allow users to claim their share of the revenue
//This revenue sharing contract differs from the previous one in that it distributes revenue evenly to all users holding the ARB token, rather than allocating revenue based on staked token balances. This approach would ensure that all users benefit from the platform's success, rather than just those with the largest token holdings.

//Overall, incorporating multiple revenue sharing mechanisms into the ArbiTrade platform would provide users with additional incentives to participate and contribute to the platform's growth and sustainability.



